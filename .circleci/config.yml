version: 2
jobs:
  s2i-runtime: &S2i
    docker:
      - image: docker:stable
    working_directory: /opt/app-root/apicast
    environment:
      S2I_VERSION: "1.1.9a-40ad911d"
      DOCKER_COMPOSE_VERSION: "1.16.1"
      OPENRESTY_VERSION: "1.13.6.1-rover12"
    steps:
      - run: apk update && apk add wget make bash curl py-pip git openssh-client
      - run: |
          pip install "docker-compose==${DOCKER_COMPOSE_VERSION}"
          docker-compose version
      - setup_remote_docker:
          reusable: true
          exclusive: false
      - checkout
      - run: travis/install-s2i.sh /usr/local/bin # needs to be after checkout because it uses script from the repo
      - run: make runtime-image
      - run: make test-runtime-image gateway-logs --keep-going
  s2i-builder:
    <<: *S2i
    steps:
      - run: apk update && apk add wget make bash curl py-pip git openssh-client
      - run: |
          pip install "docker-compose==${DOCKER_COMPOSE_VERSION}"
          docker-compose version
      - setup_remote_docker:
          reusable: true
          exclusive: false
      - checkout
      - run: travis/install-s2i.sh /usr/local/bin # needs to be after checkout because it uses script from the repo
      - run: |
          export IMAGE_TAG=${CIRCLE_TAG:-${CIRCLE_PR_NUMBER:-${CIRCLE_BRANCH}}}
          export IMAGE_NAME="quay.io/3scale/apicast:${IMAGE_TAG}-builder"
          make builder-image test-builder-image gateway-logs --keep-going
          make prove-docker
          make lint-schema
  busted:
      docker:
        - image: quay.io/3scale/s2i-openresty-centos7:1.13.6.1-rover12
      working_directory: /opt/app-root/apicast
      steps:
        - checkout
        - restore_cache:
            keys:
              - apicast-rocks-{{ arch }}-{{ checksum "gateway/Roverfile.lock" }}
              - apicast-rocks-{{ arch }}-{{ .Branch }}
              - apicast-rocks-{{ arch }}-master
        - run: make dependencies
        - save_cache:
            key: apicast-rocks-{{ arch }}-{{ checksum "gateway/Roverfile.lock" }}
            paths:
              - lua_modules
        - run: $(make rover) exec make busted
        - run:
            name: Report Unit Test Code Coverage
            command: curl -s https://codecov.io/bash | bash -s - -F busted -c
            when: always
        - store_test_results:
            path: tmp/junit
        - store_artifacts:
            path: tmp/junit
            destination: junit

  prove:
    docker:
      - image: quay.io/3scale/s2i-openresty-centos7:1.13.6.1-rover12
        environment:
          TEST_NGINX_BINARY: openresty
          LUA_BIN_PATH: /opt/app-root/bin
      - image: redis:3.2.8-alpine
    working_directory: /opt/app-root/apicast
    steps:
      - checkout
      - restore_cache:
          keys:
            - apicast-rocks-{{ arch }}-{{ checksum "gateway/Roverfile.lock" }}
            - apicast-rocks-{{ arch }}-{{ .Branch }}
            - apicast-rocks-{{ arch }}-master
      - run: make dependencies
      - restore_cache:
          keys:
            - apicast-cpanm-v2-{{ arch }}-{{ checksum "gateway/cpanfile" }}
            - apicast-cpanm-v2-{{ arch }}-{{ .Branch }}
            - apicast-cpanm-v2-{{ arch }}-master
      - run:
          command: /usr/libexec/s2i/entrypoint make prove
          environment:
            JUNIT_OUTPUT_FILE: tmp/junit/prove/report.xml
            HARNESS: TAP::Harness::JUnit
      - run:
          name: Report Integration Test Code Coverage
          command:
            curl -s https://codecov.io/bash | bash -s - -f 'luacov.report.*.out' -F prove -c
          when: always
      - save_cache:
          key: apicast-cpanm-v2-{{ arch }}-{{ checksum "gateway/cpanfile" }}
          paths:
            - ~/perl5
            - ./local
            - ./vendor/cache
            - ./.cpanm
      - store_test_results:
          path: tmp/junit
      - store_artifacts:
          path: tmp/junit
          destination: junit
      - run: make doc
      - store_artifacts:
          path: doc/lua
          destination: doc

  deploy:
    <<: *S2i
    steps:
      - run: apk update && apk add wget make bash curl git openssh-client
      - setup_remote_docker:
          reusable: true
          exclusive: false
      - checkout
      - run: travis/install-s2i.sh /usr/local/bin # needs to be after checkout because it uses script from the repo
      - deploy:
          command: |
            docker login -u="${DOCKER_USERNAME}" -p="${DOCKER_PASSWORD}" quay.io;
            make runtime-image push IMAGE_NAME="apicast:${CIRCLE_TAG:-${CIRCLE_BRANCH}}";
            make builder-image push IMAGE_NAME="apicast:${CIRCLE_TAG:-${CIRCLE_BRANCH}}-builder";

  benchmark:
    machine: true
    steps:
      - checkout
      - run: IMAGE_TAG=${CIRCLE_TAG:-${CIRCLE_BRANCH}} make benchmark
      - run: IMAGE_TAG=master make benchmark
      - store_artifacts:
          path: tmp/benchmark
          destination: benchmark

workflows:
  version: 2
  nightly:
     triggers:
       - schedule:
           cron: "0 0 * * *"
           filters:
             branches:
               only:
                 - master
     jobs:
       - deploy:
          context: org-global
  build:
    jobs:
      - build: &git-tags
          filters:
            tags:
              only: /.*/
      - s2i-runtime:
          <<: *git-tags
      - s2i-builder:
          <<: *git-tags
      - deploy:
          context: org-global
          requires:
            - build
            - s2i-runtime
            - s2i-builder
          filters:
            tags:
              only: /^v\d+\..+/
      - benchmark:
          requires:
            - deploy

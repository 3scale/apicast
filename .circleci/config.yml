s2i-image: &s2i-image
  image: quay.io/3scale/s2i-openresty-centos7:1.13.6.1-rover12
  environment:
    TEST_NGINX_BINARY: openresty
    LUA_BIN_PATH: /opt/app-root/bin
restore-lua-cache: &restore-lua-cache
  restore_cache:
    keys:
      - apicast-rocks-{{ arch }}-{{ checksum "gateway/Roverfile.lock" }}
      - apicast-rocks-{{ arch }}-{{ .Branch }}
      - apicast-rocks-{{ arch }}-master

restore-perl-cache: &restore-perl-cache
  restore_cache:
    keys:
      - apicast-cpanm-v2-{{ arch }}-{{ checksum "gateway/cpanfile.snapshot" }}
      - apicast-cpanm-v2-{{ arch }}-{{ .Branch }}
      - apicast-cpanm-v2-{{ arch }}-master

base-job: &base-job
  working_directory: /opt/app-root/apicast

perl-cache-paths: &perl-cache-paths
  paths:
    - ./local
    - ./vendor/cache
    - ./.cpanm

lua-cache-paths: &lua-cache-paths
  paths:
    - ./lua_modules

setup-docker: &setup-docker
  setup_remote_docker:
    reusable: true
    exclusive: false

docker-compose: &docker-compose
  run: |
    pip install "docker-compose==${DOCKER_COMPOSE_VERSION}"
    docker-compose version

# ------------------------------------------------------------------------

version: 2
jobs:
  s2i-runtime: &S2i
    <<: *base-job
    docker:
      - image: docker:stable
    environment:
      S2I_VERSION: "1.1.9a-40ad911d"
      DOCKER_COMPOSE_VERSION: "1.16.1"
      OPENRESTY_VERSION: "1.13.6.1-rover12"
    steps:
      - run: apk update && apk add wget make bash curl py-pip git openssh-client
      - <<: *docker-compose
      - <<: *setup-docker
      - checkout
      - run: travis/install-s2i.sh /usr/local/bin # needs to be after checkout because it uses script from the repo
      - run: make runtime-image
      - run: make test-runtime-image gateway-logs --keep-going

  s2i-builder:
    <<: *S2i
    steps:
      - run: apk update && apk add wget make bash curl py-pip git openssh-client
      - <<: *docker-compose
      - <<: *setup-docker
      - checkout
      - run: travis/install-s2i.sh /usr/local/bin # needs to be after checkout because it uses script from the repo
      - run: |
          export IMAGE_TAG=${CIRCLE_TAG:-${CIRCLE_PR_NUMBER:-${CIRCLE_BRANCH}}}
          export IMAGE_NAME="quay.io/3scale/apicast:${IMAGE_TAG}-builder"
          make builder-image test-builder-image gateway-logs --keep-going
          make prove-docker
          make lint-schema

  # Download, build and store Lua dependencies.

  build-lua:
    <<: *base-job
    docker:
      - <<: *s2i-image
    steps:
      - checkout
      - run:
          # This can happen when doing local build: lua_modules is copied from the host
          name: Cleanup local dependencies
          command: rm -rf lua_modules
      - <<: *restore-lua-cache
      - run: make dependencies
      - save_cache:
          key: apicast-rocks-{{ arch }}-{{ checksum "gateway/Roverfile.lock" }}
          <<: *lua-cache-paths
      - persist_to_workspace:
          root: .
          <<: *lua-cache-paths

  # Download, build and store Perl dependencies.

  build-perl:
    <<: *base-job
    docker:
      - <<: *s2i-image
    steps:
      - checkout
      - <<: *restore-perl-cache
      - run: make carton
      - save_cache:
          key: apicast-cpanm-v2-{{ arch }}-{{ checksum "gateway/cpanfile" }}
          <<: *perl-cache-paths
      - persist_to_workspace:
          root: .
          <<: *perl-cache-paths

  # Run unit tests (busted)

  busted:
      docker:
        - <<: *s2i-image
        - image: redis:3.2.8-alpine
      working_directory: /opt/app-root/apicast
      steps:
        - checkout
        - attach_workspace:
            at: .
        - run: $(make rover) exec make busted
        - run:
            name: Report Unit Test Code Coverage
            command: curl -s https://codecov.io/bash | bash -s - -F busted -c
            when: always
        - store_test_results:
            path: tmp/junit
        - store_artifacts:
            path: tmp/junit
            destination: junit

  prove:
    docker:
      - <<: *s2i-image
      - image: redis:3.2.8-alpine
    working_directory: /opt/app-root/apicast
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          command: /usr/libexec/s2i/entrypoint make prove
          environment:
            JUNIT_OUTPUT_FILE: tmp/junit/prove/report.xml
            HARNESS: TAP::Harness::JUnit
      - run:
          name: Report Integration Test Code Coverage
          command:
            curl -s https://codecov.io/bash | bash -s - -f 'luacov.report.*.out' -F prove -c
          when: always
      - store_test_results:
          path: tmp/junit
      - store_artifacts:
          path: tmp/junit
          destination: junit
      - run: make doc
      - store_artifacts:
          path: doc/lua
          destination: doc

  deploy:
    <<: *S2i
    steps:
      - run: apk update && apk add wget make bash curl git openssh-client
      - setup_remote_docker:
          reusable: true
          exclusive: false
      - checkout
      - run: travis/install-s2i.sh /usr/local/bin # needs to be after checkout because it uses script from the repo
      - deploy:
          command: |
            docker login -u="${DOCKER_USERNAME}" -p="${DOCKER_PASSWORD}" quay.io;
            make runtime-image push IMAGE_NAME="apicast:${CIRCLE_TAG:-${CIRCLE_BRANCH}}";
            make builder-image push IMAGE_NAME="apicast:${CIRCLE_TAG:-${CIRCLE_BRANCH}}-builder";

  benchmark:
    machine: true
    steps:
      - checkout
      - run: IMAGE_TAG=${CIRCLE_TAG:-${CIRCLE_BRANCH}} make benchmark
      - run: IMAGE_TAG=master make benchmark
      - store_artifacts:
          path: tmp/benchmark
          destination: benchmark

build-tags: &build-tags
  filters:
    tags:
      only: /.*/

workflows:
  version: 2
  nightly:
     triggers:
       - schedule:
           cron: "0 0 * * *"
           filters:
             branches:
               only:
                 - master
     jobs:
       - deploy:
          context: org-global
  build-test-deploy:
    jobs:
      - build-lua:
          <<: *build-tags
      - build-perl:
          <<: *build-tags
      - busted:
          <<: *build-tags
          requires:
            - build-lua
      - prove:
          <<: *build-tags
          requires:
            - build-lua
            - build-perl
      - s2i-builder:
          <<: *build-tags
      - s2i-runtime:
          <<: *build-tags
      - deploy:
          context: org-global
          requires:
            - prove
            - busted
            - s2i-runtime
            - s2i-builder
          filters:
            tags:
              only: /^v\d+\..+/
      - benchmark:
          requires:
            - deploy
